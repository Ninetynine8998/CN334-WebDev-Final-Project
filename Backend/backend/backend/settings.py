# """
# Django settings for backend project.

# Generated by 'django-admin startproject' using Django 5.2.1.

# For more information on this file, see
# https://docs.djangoproject.com/en/5.2/topics/settings/

# For the full list of settings and their values, see
# https://docs.djangoproject.com/en/5.2/ref/settings/
# """

# from pathlib import Path
# import os

# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-r-iv&ksfr*427&f&&)5o^x0l$mh4%#)ljh(&(+jn-o71+0(wsa'

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# ALLOWED_HOSTS = [
#     '127.0.0.1',
#     'localhost',
#     'cn334-webdev-final-project.onrender.com',
# ]


# # Application definition

# INSTALLED_APPS = [
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
#     'rest_framework', # เพิ่มบรรทัดนี้
#     'sheets_service', 
#     'rest_framework.authtoken', # <--- ต้องมีบรรทัดนี้
#     'corsheaders',

# ]

# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'corsheaders.middleware.CorsMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
# ]

# ROOT_URLCONF = 'backend.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'backend.wsgi.application'


# # Database
# # https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         # เปลี่ยน NAME ให้ชี้ไปที่ Directory ที่ Mount Volume + ชื่อไฟล์ db.sqlite3
#         # ถ้า Mount Volume ที่ /app/data
#         'NAME': os.path.join('/app/data', 'db.sqlite3'), # <-- แก้ไขบรรทัดนี้
#     }
# }


# # Password validation
# # https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/5.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.2/howto/static-files/

# STATIC_URL = 'static/'

# # Default primary key field type
# # https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# # กำหนดค่า REST_FRAMEWORK
# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         # ใช้ Custom Authentication Class ที่เราจะสร้างขึ้น (ในขั้นตอนที่ 3)
#         # 'sheets_service.authentication.ExpiringTokenAuthentication' # ชื่อเต็มของคลาสและไฟล์
#         'sheets_service.authentication.ExpiringTokenAuthentication', # สมมติว่าไฟล์ชื่อ authentication.py
#         'rest_framework.authentication.SessionAuthentication', # อาจจะยังคง Session Auth ไว้ก็ได้
#         'rest_framework.authentication.BasicAuthentication', # อาจจะยังคง Basic Auth ไว้ก็ได้
#     ],
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated', # ตัวอย่าง: กำหนด default ให้ต้องล็อกอิน
#     ],
#     # ... การตั้งค่าอื่นๆ ของ DRF ...
# }

# # กำหนดให้ DRF ใช้ Model Token ที่เราสร้างขึ้นเอง
# # ชื่อ 'sheets_service.ExpiringToken' คือ <ชื่อ app>.<ชื่อ Model>
# AUTH_TOKEN_MODEL = 'sheets_service.ExpiringToken'

# # กำหนดระยะเวลาหมดอายุของ Token (เป็นวินาที)
# # ตัวอย่าง: หมดอายุใน 24 ชั่วโมง (24 * 60 * 60 = 86400 วินาที)
# # TOKEN_EXPIRY_TIME = 86400 # กำหนดค่านี้ขึ้นมาเอง ใช้ชื่ออะไรก็ได้ที่คุณเข้าใจ
# TOKEN_EXPIRY_TIME = 86400 # กำหนดค่านี้ขึ้นมาเอง ใช้ชื่ออะไรก็ได้ที่คุณเข้าใจ

# CORS_ALLOW_ALL_ORIGINS = True


"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os

# ✅ นำเข้า Library environ
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# ✅ สร้าง Object env
env = environ.Env(
    # กำหนด Default values และ Type สำหรับ Environment Variables
    # DATABASE_URL จะใช้สำหรับ Production (PostgreSQL บน Render)
    # ค่า Default 'sqlite:///db.sqlite3' คือสำหรับ Local development
    DATABASE_URL=(str, 'sqlite:///db.sqlite3'),

    # SECRET_KEY ควรอ่านจาก Env Var ใน Production
    # กำหนดค่า Default สำหรับ Local development
    SECRET_KEY=(str, 'django-insecure-r-iv&ksfr*427&f&&)5o^x0l$mh4%#)ljh(&(+jn-o71+0(wsa'), # ใช้ค่า default เดิมของคุณ

    # DEBUG ควรอ่านจาก Env Var และเป็น False ใน Production
    DEBUG=(bool, False), # ตั้ง Default เป็น False เพื่อความปลอดภัยใน Production

    # ALLOWED_HOSTS ควรอ่านจาก Env Var ใน Production
    # ค่า Default เป็น List ว่าง สำหรับ Local development
    ALLOWED_HOSTS=(list, []),
)

# ✅ อ่านไฟล์ .env ใน Local development (ถ้ามี)
# ไฟล์ .env ควรอยู่ที่ Root ของ Project Backend (ระดับเดียวกับ manage.py)
# และไม่ควรถูก Commit ขึ้น Git (เพิ่มใน .gitignore)
environ.Env.read_env(os.path.join(BASE_DIR, '.env'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# ✅ SECURITY WARNING: keep the secret key used in production secret!
# ให้อ่าน SECRET_KEY จาก Environment Variable
SECRET_KEY = env('SECRET_KEY')


# ✅ SECURITY WARNING: don't run with debug turned on in production!
# ให้อ่าน DEBUG จาก Environment Variable
DEBUG = env('DEBUG')


# ✅ ให้อ่าน ALLOWED_HOSTS จาก Environment Variable
# env.list() จะแยก string ด้วย comma และลบ whitespace
ALLOWED_HOSTS = env.list('ALLOWED_HOSTS', default=[])


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'sheets_service',
    'rest_framework.authtoken',
    'corsheaders',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# ✅ เปลี่ยนการตั้งค่า DATABASES ให้อ่านค่าจาก DATABASE_URL Environment Variable
DATABASES = {
    'default': env.db() # env.db() จะแยก Database URL และตั้งค่าให้ถูกต้องอัตโนมัติ
}

# เมื่อใช้ env.db() ไม่ต้องระบุ ENGINE, NAME, USER, PASSWORD ฯลฯ ด้วยตัวเองแล้วครับ
# เช่น 'ENGINE': 'django.db.backends.sqlite3' หรือ 'NAME': os.path.join('/app/data', 'db.sqlite3')
# บรรทัดเหล่านี้จะถูกแทนที่ด้วยค่าจาก DATABASE_URL ครับ


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# กำหนดค่า REST_FRAMEWORK เดิมของคุณ
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'sheets_service.authentication.ExpiringTokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    # ... การตั้งค่าอื่นๆ ของ DRF ...
}

AUTH_TOKEN_MODEL = 'sheets_service.ExpiringToken'

TOKEN_EXPIRY_TIME = 86400

CORS_ALLOW_ALL_ORIGINS = True

# ✅ การตั้งค่าสำหรับ Production บน Render เพิ่มเติม (แนะนำ)
# ควรอ่านจาก Env Var
# ALLOWED_HOSTS ถูกจัดการด้วย env.list() แล้ว

# ถ้าต้องการบังคับ HTTPS ใน Production (แนะนำ)
# SECURE_SSL_REDIRECT = env.bool('SECURE_SSL_REDIRECT', default=True) # ควรอ่านจาก Env Var
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# การจัดการ Static Files สำหรับ Production (ต้องการ WhiteNoise หรือ S3/Cloudinary)
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') # กำหนด Root สำหรับ collectstatic
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage' # ถ้าใช้ WhiteNoise

# การจัดการ Media Files สำหรับ Production (ต้องการ S3/Cloudinary)
# MEDIA_URL = '/media/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

